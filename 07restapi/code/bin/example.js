// Generated by Haxe 4.1.4
(function ($global) { "use strict";
var Controller = function() { };
Controller.__name__ = true;
Controller.index = function(req,res) {
	res.sendFile(__dirname + "/public/index.html");
};
Controller.findAll = function(req,res) {
	res.send([{ "id" : 1, "name" : "Max", "band" : "Maximum Pain", "instrument" : "guitar"}]);
};
Controller.findByName = function(req,res) {
	res.send("{\"id\": 1,\"name\":\"" + req.params.name + "\",\"band\":\"BBQ Brawlers\"}");
};
Controller.findById = function(req,res) {
	res.send("findbyid: " + req.params.id);
};
Controller.add = function(req,res) {
	var inputName = req.body.inputName;
	var inputGroupName = req.body.inputGroupName;
	res.send("{\"id\": 1,\"name\":\"" + inputName + "\",\"band\":\"" + inputGroupName + "\"}");
};
var Main = function() {
	this.PORT = 3001;
	console.log("src/Main.hx:22:","Node.js rest-api: open browser at http://localhost:" + this.PORT);
	console.log("src/Main.hx:23:","Stop node.js : CTRL + c");
	var app = new js_npm_Express();
	app.set("port",this.PORT);
	app.use(new js_npm_express_Favicon(__dirname + "/public/favicon.ico"));
	app.use(new js_npm_express_Morgan("dev"));
	app.use(js_npm_express_BodyParser.json());
	app.use(js_npm_express_BodyParser.urlencoded({ extended : true}));
	app.use(new js_npm_express_Static(js_node_Path.join(__dirname,"public")));
	Routes.init(app);
	app.use(function(req,res,next) {
		res.status(404).send("404");
	});
	app.listen(app.get("port"),function() {
		console.log("src/Main.hx:44:","Express server listening on port " + Std.string(app.get("port")));
	});
};
Main.__name__ = true;
Main.main = function() {
	var main = new Main();
};
Math.__name__ = true;
var Routes = function() { };
Routes.__name__ = true;
Routes.init = function(app) {
	app.get("/",Controller.index);
	app.get("/musician/:name",Controller.findByName);
	app.get("/musicians",Controller.findAll);
	app.get("/musicians/:id",Controller.findById);
	app.post("/musicians",Controller.add);
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var js_node_Path = require("path");
var js_npm_Express = require("express");
var js_npm_express_BodyParser = require("body-parser");
var js_npm_express_Favicon = require("serve-favicon");
var js_npm_express_Morgan = require("morgan");
var js_npm_express_Static = require("express").static;
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
Main.main();
})({});
